{"version":3,"file":"static/js/191.f9bd8aaf.chunk.js","mappings":"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","sources":["webpack://my-social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-social-network/./src/components/Dialogs/DialogItems/DialogItem/DialogItem.module.css?7988","components/Dialogs/DialogItems/DialogItem/DialogItem.jsx","webpack://my-social-network/./src/components/Dialogs/DialogItems/DialogItems.module.css?30be","components/Dialogs/DialogItems/DialogItems.jsx","webpack://my-social-network/./src/components/Dialogs/Messages/Messages.module.css?2673","components/Dialogs/Messages/MessageItem/MessageItem.jsx","components/Dialogs/Messages/AddMessage/AddMessage.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"dialog\":\"Dialogs_dialog__htSTl\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogsItems\":\"DialogItem_dialogsItems__v2DID\",\"active\":\"DialogItem_active__iQ8Pq\"};","import style from './DialogItem.module.css'\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = ({ava, name, id}) => {\n    const path = \"/dialogs/\" + id;\n    return (\n        <div className={style.dialogsItems}>\n            <img src={ava} alt={'avatar'}/>\n            <NavLink to={path}> {name} </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"DialogItems_dialogs__PfReK\"};","import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport style from \"./DialogItems.module.css\"\n\nconst DialogItems = ({dialogs}) => {\n    const dialogsElements = dialogs.map( d => <DialogItem name={d.name} id={d.id} ava={d.avatarLink} key={d.id}/> );\n    return (\n        <div className={style.dialogs}>\n            {dialogsElements}\n        </div>\n    )\n}\n\nexport default DialogItems;\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__1SiN1\",\"message\":\"Messages_message__zi+f3\"};","import React from \"react\";\n\nconst MessageItem = (props) => {\n    return (\n        <div>\n            {props.message}\n        </div>\n    );\n}\n\nexport default MessageItem;\n","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../../utils/validators\";\nimport {Textarea} from \"../../../common/FormControls/FormControls\";\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       placeholder={\"enter your message...\"}\n                       name={\"newMessageBody\"}\n                       validate={[required, maxLength30]}\n                />\n            </div>\n            <div>\n                <button>send</button>\n            </div>\n        </form>\n    )\n}\n\nexport const AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\n","import style from './Messages.module.css'\nimport React from \"react\";\nimport MessageItem from \"./MessageItem/MessageItem\";\nimport {AddMessageReduxForm} from \"./AddMessage/AddMessage\";\n\nconst Messages = ({dialogsPage, addMessage}) => {\n    const messagesElements = dialogsPage.messages.map(m => <MessageItem message={m.message} key={m.id}/>);\n\n    const addNewMessageBody = (values) => {\n        addMessage(values.newMessageBody);\n    }\n\n    return (\n        <div>\n            <div className={style.messages}>\n                {messagesElements}\n            </div>\n            <AddMessageReduxForm onSubmit={addNewMessageBody}/>\n        </div>\n\n    );\n}\n\nexport default Messages;\n","import style from './Dialogs.module.css'\nimport React from \"react\";\nimport DialogItems from './DialogItems/DialogItems';\nimport Messages from \"./Messages/Messages\";\n\nconst Dialogs = ({dialogsPage, addMessage}) => {\n    return (\n        <div className={style.dialogs}>\n            <div className={style.dialogsItems}>\n                <DialogItems dialogs={dialogsPage.dialogs}/>\n            </div>\n            <div className={style.messages}>\n                <Messages dialogsPage={dialogsPage} addMessage={addMessage}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;\n","import {addMessage} from \"../../redux/dialogsReducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"@reduxjs/toolkit\";\n\nfunction mapStateToProps(state) {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addMessage: (newMessageBody) => dispatch(addMessage(newMessageBody)),\n    }\n}\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => (\n    {\n        isAuth: state.auth.isAuth\n    }\n);\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to=\"/login\"/>;\n            return <Component {...this.props}/>;\n        }\n    }\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\n}"],"names":["_ref","ava","name","path","id","_jsxs","className","style","children","_jsx","src","alt","NavLink","to","dialogsElements","dialogs","map","d","DialogItem","avatarLink","props","message","maxLength30","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsPage","addMessage","messagesElements","messages","m","MessageItem","values","newMessageBody","DialogItems","Messages","compose","connect","state","dispatch","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React"],"sourceRoot":""}