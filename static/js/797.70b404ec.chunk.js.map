{"version":3,"file":"static/js/797.70b404ec.chunk.js","mappings":"wOASMA,GAAcC,EAAAA,EAAAA,GAAiB,IAqC/BC,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAnCL,SAAHE,GAA+B,IAA1BC,EAAYD,EAAZC,aAAcC,EAAKF,EAALE,MAC9B,OACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUH,EAAaI,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EACXC,YAAa,QACbC,KAAM,QACNC,SAAU,CAACC,EAAAA,EAAUlB,QAGhCW,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EACXC,YAAa,WACbC,KAAM,WACNC,SAAU,CAACC,EAAAA,EAAUlB,GACrBmB,KAAM,gBAGjBX,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAW,QACXM,KAAM,WACNH,KAAM,eACX,iBAELT,IACGI,EAAAA,EAAAA,KAAA,OAAKS,UAAWC,EAAAA,EAAMC,iBAAiBZ,SAClCH,KAETI,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAIxB,IAiBA,WAAea,EAAAA,EAAAA,KADS,SAACC,GAAK,MAAM,CAACC,OAAQD,EAAME,KAAKD,OAAO,GACvB,CAACE,MAAAA,EAAAA,IAAzC,EAbc,SAACC,GAIX,OAAIA,EAAMH,QACCd,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CAACC,GAAI,cAErBnB,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACT,EAAc,CAACO,SAPP,SAACsB,GACdH,EAAMD,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAC5D,KAQJ,G","sources":["components/Login/Login.jsx"],"sourcesContent":["import {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormControls/FormControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport style from \"../common/FormControls/FormControls.module.css\"\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field component={Input}\n                       placeholder={\"Email\"}\n                       name={\"email\"}\n                       validate={[required, maxLength30]}\n                />\n            </div>\n            <div>\n                <Field component={Input}\n                       placeholder={\"Password\"}\n                       name={\"password\"}\n                       validate={[required, maxLength30]}\n                       type={\"password\"}\n                />\n            </div>\n            <div>\n                <Field component={\"input\"}\n                       type={\"checkbox\"}\n                       name={\"rememberMe\"}\n                />remember me\n            </div>\n            {error &&\n                <div className={style.formSummaryError}>\n                    {error}\n                </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n    if (props.isAuth)\n        return <Navigate to={\"/profile\"}/>\n    return (\n        <div>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth});\nexport default connect(mapStateToProps, {login})(Login);\n"],"names":["maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","form","_ref","handleSubmit","error","_jsxs","onSubmit","children","_jsx","Field","component","Input","placeholder","name","validate","required","type","className","style","formSummaryError","connect","state","isAuth","auth","login","props","Navigate","to","formData","email","password","rememberMe"],"sourceRoot":""}